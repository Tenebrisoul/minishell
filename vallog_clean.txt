=== 1: LEAKS - 2:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ❌ ===
  ""

=== 2: LEAKS - 3:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ❌ ===
  "   "

=== 3: LEAKS - 4:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ❌ ===
  ""

=== 4: LEAKS - 4:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ❌ ===
   "    "

=== 5: LEAKS - 5:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ❌ ===
  "		"

=== 6: LEAKS - 6:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ❌ ===
  "			"

=== 7: LEAKS - 7:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ❌ [ minishell(127)  bash(0) ]  LEAKS: ❌ ===
  touch "

=== 8: LEAKS - 12:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  cat << $USER
  why
  not
  $USER

=== 9: LEAKS - 14:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  cat << "$USER"
  why
  not
  $USER

=== 10: LEAKS - 15:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  cat << "$US"E"R"
  because
  we
  love
  bash
  $USER

=== 11: LEAKS - 23:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  ls | cat << stop | grep "asd"
  is this good
  stop

=== 12: LEAKS - 24:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  ls | cat << stop | ls -la | cat << stop1
  12
  32232
  23
  stop
  awdaw
  daswd
  stop1

=== 13: LEAKS - 25:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  ls | cat << stop | ls -la | cat << stop1 | ls | cat << stop2 | ls -la | cat << stop3
  $USER
  ad
  as $HOME
  stop
  awd
  wf$PWDdqwdwqd
  stop1
  das
  das
  stop2
  dsq
  wd
  wf$PWDdqwdwqd
  stop3

=== 14: LEAKS - 26:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  ls | cat << stop | ls -la | cat << stop1 | ls | cat << stop2 | ls -la > out | cat << 'stop3'
  $USER
  ad
  stop
  dsa
  stop1
  sad
  stop2
  as $HOME
  stop3
  /bin/rm -f out

=== 15: LEAKS - 27:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ❌ [ minishell(0)  bash(2) ]  LEAKS: ❌ ===
  ls | cat << stop | ls -la | cat << stop1 | ls | cat << stop2 | ls -la > > out | cat << stop3
  fe
  wf
  fwe
  f
  stop
  dw
  stop1
  dwasd
  stop2
  cat Makefile | ls > out
  cat out
  /bin/rm -f out

=== 16: LEAKS - 28:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  ls | cat << stop | ls -la > out0| cat << stop1 | ls | cat << stop2 | ls -la >> out | cat << stop3
  fe
  wf
  fwe
  f
  stop
  dw
  stop1
  dw
  stop2
  e
  wf
  stop3
  /bin/rm -f out
  /bin/rm -f out0

=== 17: LEAKS - 36:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  ls|cat Makefile|cat<<asd>out
  $USER
  asd
  /bin/rm -f out

=== 18: LEAKS - 37:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  ls|cat Makefile|cat<<'asd'>out
  $USER
  asd
  /bin/rm -f out

=== 19: LEAKS - 38:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  ls|cat Makefile|cat<<"asd">out
  $USER
  asd
  /bin/rm -f out

=== 20: LEAKS - 80:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  cat << lim
   "lim"
  HELLO
  42
   lim
  testing your minishell
  limm
  lim

=== 21: LEAKS - 81:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  <<lim cat
   "lim"
  HELLO
  42
   lim
  testing your minishell
  limm
  lim

=== 22: LEAKS - 82:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  cat << lim
  test
  lim

=== 23: LEAKS - 83:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  cat << EOF

=== 24: LEAKS - 84:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  cat << hello
  $USER
  $NOVAR
  $HOME
  hello

=== 25: LEAKS - 85:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  cat << 'lim'
  $USER
  $NOVAR
  $HOME
  lim

=== 26: LEAKS - 86:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  cat << lim''
  $USER
  $NOVAR
  $HOME
  lim

=== 27: LEAKS - 87:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  cat << "lim"
  $USER
  $NOVAR
  $HOME
  lim

=== 28: LEAKS - 88:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ❌ ===
  cat << 'lim'
  $USER
  $NOVAR
  $HOME
  lim

=== 29: EXIT_CODE - 8:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ❌ [ minishell(127)  bash(126) ]  LEAKS: ✅ ===
  ~

=== 30: EXIT_CODE - 11:	STD_OUT: ❌  STD_ERR: ❌  EXIT_CODE: ❌ [ minishell(0)  bash(127) ]  LEAKS: ✅ ===
  env -i ./minishell
  cd /bin/
  ls

=== 31: EXIT_CODE - 15:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ❌ [ minishell(126)  bash(127) ]  LEAKS: ✅ ===
  .

=== 32: EXIT_CODE - 16:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ❌ [ minishell(0)  bash(1) ]  LEAKS: ✅ ===
  >> $HOME

=== 33: EXIT_CODE - 16:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ❌ [ minishell(126)  bash(127) ]  LEAKS: ✅ ===
  ..

=== 34: EXIT_CODE - 20:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ❌ [ minishell(0)  bash(2) ]  LEAKS: ✅ ===
  >echo>
  /bin/rm -f echo

=== 35: EXIT_CODE - 21:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ❌ [ minishell(0)  bash(2) ]  LEAKS: ✅ ===
  <echo<
  /bin/rm -f echo

=== 36: EXIT_CODE - 22:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ❌ [ minishell(0)  bash(2) ]  LEAKS: ✅ ===
  >>echo>>
  /bin/rm -f echo

=== 37: EXIT_CODE - 26:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ❌ [ minishell(126)  bash(127) ]  LEAKS: ✅ ===
  "."

=== 38: EXIT_CODE - 43:	STD_OUT: ❌  STD_ERR: ❌  EXIT_CODE: ❌ [ minishell(127)  bash(0) ]  LEAKS: ✅ ===
  export tmp_test="/bin/echo 42"
  $tmp_test
  $tmp_test 42
  export tmp_test="/bin/echo"
  $tmp_test 42 42

=== 39: EXIT_CODE - 101:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ❌ [ minishell(0)  bash(127) ]  LEAKS: ✅ ===
  '''''''''''''''' echo ok

=== 40: EXIT_CODE - 110:	STD_OUT: ❌  STD_ERR: ❌  EXIT_CODE: ❌ [ minishell(127)  bash(0) ]  LEAKS: ✅ ===
  unset PATH
  cd /bin
  ls

=== 41: EXIT_CODE - 111:	STD_OUT: ❌  STD_ERR: ❌  EXIT_CODE: ❌ [ minishell(127)  bash(0) ]  LEAKS: ✅ ===
  unset PATH
  cd /bin/../bin/
  ls

=== 42: EXIT_CODE - 113:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ❌ [ minishell(127)  bash(0) ]  LEAKS: ✅ ===
  unset PATH
  cd /bin/
  sleep 2

=== 43: EXIT_CODE - 122:	STD_OUT: ❌  STD_ERR: ❌  EXIT_CODE: ❌ [ minishell(1)  bash(0) ]  LEAKS: ✅ ===
  cd ../../
  cd -
  cd -

=== 44: EXIT_CODE - 123:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ❌ [ minishell(2)  bash(127) ]  LEAKS: ✅ ===
  >| echo sure

=== 45: EXIT_CODE - 124:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ❌ [ minishell(1)  bash(0) ]  LEAKS: ✅ ===
  cd --

=== 46: EXIT_CODE - 140:	STD_OUT: ❌  STD_ERR: ❌  EXIT_CODE: ❌ [ minishell(0)  bash(127) ]  LEAKS: ✅ ===
  env what

=== 47: EXIT_CODE - 160:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ❌ [ minishell(0)  bash(1) ]  LEAKS: ✅ ===
   export $?

=== 48: EXIT_CODE - 165:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ❌ [ minishell(1)  bash(2) ]  LEAKS: ✅ ===
  export --TEST=123

=== 49: EXIT_CODE - 170:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ❌ [ minishell(1)  bash(2) ]  LEAKS: ✅ ===
  export -TEST=100

=== 50: EXIT_CODE - 185:	STD_OUT: ✅  STD_ERR: ✅  EXIT_CODE: ❌ [ minishell(1)  bash(2) ]  LEAKS: ✅ ===
  export -TEST=123

=== 51: EXIT_CODE - 200:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ❌ [ minishell(1)  bash(0) ]  LEAKS: ✅ ===
  export TEST+=100

=== 52: STDERR - 4:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ✅ ===
  >> '$USER'
  cat '$USER'
  /bin/rm -f '$USER'

=== 53: STDERR - 8:	STD_OUT: ❌  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ✅ ===
  cd ~/Desktop/
  pwd

=== 54: STDERR - 14:	STD_OUT: ❌  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ✅ ===
  echo "ls" | env -i $MINISHELL_PATH"/"$EXECUTABLE
  echo $?

=== 55: STDERR - 17:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ✅ ===
  >> "$H"OM"E"
  cat OME
  /bin/rm -f OME

=== 56: STDERR - 18:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ✅ ===
  >> "$USER'$USER'"
  cat "$USER'$USER'"
  /bin/rm -f "$USER'$USER'"

=== 57: STDERR - 19:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ✅ ===
  >> "$USER"
  cat $USER
  /bin/rm -f $USER

=== 58: STDERR - 105:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ✅ ===
  cd "doesntexist" 2>/dev/null

=== 59: STDERR - 107:	STD_OUT: ✅  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ✅ ===
  cd "wtf" 2>/dev/null

=== 60: STDERR - 114:	STD_OUT: ❌  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ✅ ===
  mkdir tmp_path_test1 tmp_path_test2
  printf '#include <unistd.h>\nint main(){write(1, \"1\\n\", 2);}' > tmp_path_test1/test1.c
  gcc tmp_path_test1/test1.c -o tmp_path_test1/a.out
  printf '#include <unistd.h>\nint main(){write(1, \"2\\n\", 2);}' > tmp_path_test2/test2.c
  gcc tmp_path_test2/test2.c -o tmp_path_test2/a.out
  export PATH=tmp_path_test1:tmp_path_test2
  a.out
  export PATH=tmp_path_test2:tmp_path_test1
  a.out
  /bin/rm -rf tmp_path_test1 tmp_path_test2

=== 61: STDERR - 128:	STD_OUT: ❌  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ✅ ===
  pwd
  cd ~
  cd - ananas dot jpeg
  pwd

=== 62: STDERR - 130:	STD_OUT: ❌  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ✅ ===
  pwd
  cd ~ asd w dd q asd
  pwd

=== 63: STDERR - 148:	STD_OUT: ❌  STD_ERR: ❌  EXIT_CODE: ✅  LEAKS: ✅ ===
  /bin/echo $HOME
  env | grep HOME
  export HOME=42
  /bin/echo $HOME
  env | grep HOME

=== 64: OTHER - 1:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  echo cd ~

=== 65: OTHER - 1:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  env | sort | grep -v SHLVL | grep -v ^_

=== 66: OTHER - 10:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export PATH=1
  echo $PATH
  echo 1

=== 67: OTHER - 10:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export test="arg1	arg2"
  echo 'echo $1' > tmp_test_sh
  bash tmp_test_sh $test
  echo 'echo $2' > tmp_test_sh
  bash tmp_test_sh $test
  rm -f tmp_test_sh

=== 68: OTHER - 12:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  touch tmp_x_file1
  tmp_x_file1
  echo $?
  ./tmp_x_file1
  echo $?
  export PATH=$HOME
  echo $PATH
  tmp_x_file1
  echo $?
  ./tmp_x_file1
  echo $?
  unset PATH
  tmp_x_file1
  echo $?
  ./tmp_x_file1
  echo $?
  echo 42
  /bin/rm -f tmp_x_file1

=== 69: OTHER - 13:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export T=a T=b T=c
  echo $T

=== 70: OTHER - 13:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  echo "env | /usr/bin/wc -l" | env -i $MINISHELL_PATH"/"$EXECUTABLE
  echo $?

=== 71: OTHER - 15:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  echo "unset PATH" | env -i $MINISHELL_PATH"/"$EXECUTABLE
  echo $?

=== 72: OTHER - 17:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  /bin/echo $"'HOM'E"$USER

=== 73: OTHER - 22:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  /bin/echo "$"

=== 74: OTHER - 24:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  /bin/echo "$""$"

=== 75: OTHER - 27:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  /bin/echo "$"$

=== 76: OTHER - 41:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  mkdir "tmp_test_folder"
  /bin/echo $PWD
  cd "tmp_test_folder"
  /bin/echo $PWD
  cd ..
  /bin/echo $PWD
  rm -rf "tmp_test_folder"

=== 77: OTHER - 42:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  mkdir "tmp_test folder"
  /bin/echo $PWD
  cd "tmp_test folder"
  /bin/echo $PWD
  cd ..
  /bin/echo $PWD
  rm -rf "tmp_test folder"

=== 78: OTHER - 45:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export X="  A  B  "
  /bin/echo "1"$X'2'

=== 79: OTHER - 46:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export X=" A  B  "
  /bin/echo "1"$X'2'

=== 80: OTHER - 47:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export X="A  B  "
  /bin/echo "1"$X'2'

=== 81: OTHER - 48:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export X="  A  B "
  /bin/echo "1"$X'2'

=== 82: OTHER - 49:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export X="  A  B"
  /bin/echo "1"$X'2'

=== 83: OTHER - 50:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export X="  A B  "
  /bin/echo "1"$X'2'

=== 84: OTHER - 51:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export X="  AB  "
  /bin/echo "1"$X'2'

=== 85: OTHER - 52:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export X="  A  B  "
  /bin/echo $X'2'

=== 86: OTHER - 53:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export X="  A  B  "
  /bin/echo $X"1"

=== 87: OTHER - 56:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export X="   "
  /bin/echo "1"$X'2'

=== 88: OTHER - 57:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export X="  A  B  "
  /bin/echo ?$X'2'

=== 89: OTHER - 58:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export X="  A  B  "
  /bin/echo "1"$X?

=== 90: OTHER - 67:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  echo $"'HOM'E"$USER

=== 91: OTHER - 72:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  echo "$"

=== 92: OTHER - 74:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  echo "$""$"

=== 93: OTHER - 77:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  echo "$"$

=== 94: OTHER - 81:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  env | grep $USER

=== 95: OTHER - 83:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export USER="@?/"
  env | grep USER

=== 96: OTHER - 110:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export L=amazing L=ok L=cool
  echo $L

=== 97: OTHER - 111:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export L=amazing L=ok L=cool
  export L=ok
  echo $L

=== 98: OTHER - 114:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  echo "$"$'$'$"$"$"$"$'$'

=== 99: OTHER - 139:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  env | wc -l

=== 100: OTHER - 150:	STD_OUT: ❌  STD_ERR: ✅  EXIT_CODE: ✅  LEAKS: ✅ ===
  export
